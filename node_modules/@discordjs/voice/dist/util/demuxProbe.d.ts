/// <reference types="node" />
import { Readable } from 'stream';
import { StreamType } from '..';
/**
 * Takes an Opus Head, and verifies whether the associated Opus audio is suitable to play in a Discord voice channel.
 * @param opusHead The Opus Head to validate
 * @returns true if suitable to play in a Discord voice channel, false otherwise
 */
export declare function validateDiscordOpusHead(opusHead: Buffer): boolean;
/**
 * The resulting information after probing an audio stream
 */
export interface ProbeInfo {
    /**
     * The readable audio stream to use. You should use this rather than the input stream, as the probing
     * function can sometimes read the input stream to its end and cause the stream to close.
     */
    stream: Readable;
    /**
     * The recommended stream type for this audio stream
     */
    type: StreamType;
}
/**
 * Attempt to probe a readable stream to figure out whether it can be demuxed using an Ogg or WebM Opus demuxer.
 * @param stream The readable stream to probe
 * @param probeSize The number of bytes to attempt to read before giving up on the probe
 * @param validator The Opus Head validator function
 * @experimental
 */
export declare function demuxProbe(stream: Readable, probeSize?: number, validator?: typeof validateDiscordOpusHead): Promise<ProbeInfo>;
//# sourceMappingURL=demuxProbe.d.ts.map