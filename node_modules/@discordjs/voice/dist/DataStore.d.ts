import { GatewayOPCodes } from 'discord-api-types/v8';
import { AudioPlayer } from './audio';
import { VoiceConnection } from './VoiceConnection';
export interface JoinConfig {
    guildId: string;
    channelId: string | null;
    selfDeaf: boolean;
    selfMute: boolean;
}
/**
 * Sends a voice state update to the main websocket shard of a guild, to indicate joining/leaving/moving across
 * voice channels.
 *
 * @param config - The configuration to use when joining the voice channel
 */
export declare function createJoinVoiceChannelPayload(config: JoinConfig): {
    op: GatewayOPCodes;
    d: {
        guild_id: string;
        channel_id: string | null;
        self_deaf: boolean;
        self_mute: boolean;
    };
};
export declare function getVoiceConnection(guildId: string): VoiceConnection | undefined;
export declare function untrackVoiceConnection(guildId: string): boolean;
export declare function trackVoiceConnection(guildId: string, voiceConnection: VoiceConnection): Map<string, VoiceConnection>;
/**
 * Checks whether or not the given audio player is being driven by the data store clock.
 *
 * @param target - The target to test for
 * @returns true if it is being tracked, false otherwise
 */
export declare function hasAudioPlayer(target: AudioPlayer): boolean;
/**
 * Adds an audio player to the data store tracking list, if it isn't already there.
 *
 * @param player - The player to track
 */
export declare function addAudioPlayer(player: AudioPlayer): AudioPlayer;
/**
 * Removes an audio player from the data store tracking list, if it is present there.
 */
export declare function deleteAudioPlayer(player: AudioPlayer): void;
//# sourceMappingURL=DataStore.d.ts.map